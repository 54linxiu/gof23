package com.qht.strategy;
/**
 * 负责和具体的策略交互
 * 这样的话，具体算法和直接的客户端调用分离了，使得算法可以独立于客户端独立于的变化
 * @author q
 *如果使用spring的依赖注入功能，还可以通过配置文件，动态注入不同策略对象，动态的切换不同的算法
 */
public class Context {
	private Strategy strategy;

	//可以通过构造器注入
	public Context(Strategy strategy) {
		super();
		this.strategy = strategy;
	}
	
	public void pringPrice(double s) {
		System.out.println("该你报价"+strategy.getPrice(s));
	}
	
}
